// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Layout() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><script defer data-project=\"6823bad3322ceedd6826fca3\" src=\"/static/litlyx.js\"></script><link href=\"/static/styles.css\" rel=\"stylesheet\"><link rel=\"preload\" as=\"image\" href=\"/static/bwca-day-small.webp\"><title>WW2 Sim</title></head><body class=\"flex flex-col min-h-screen\"><div id=\"bg-low\" class=\"fixed inset-0 z-[-10] pointer-events-none bg-no-repeat bg-cover bg-center transition-filter duration-200 ease-in-out bg-[#e8f5ea] blur-sm bg-[url(/static/bwca-day-small.webp)]\"></div><div id=\"bg-high\" class=\"fixed inset-0 z-[-10] pointer-events-none bg-no-repeat bg-cover bg-center transition-filter duration-500 ease-in-out bg-[#e8f5ea] opacity-0 bg-[url(https://cdn.aamira.me/bwca-day.webp)]\"></div><script>\n\t\t\t// FADE IN HIGH QUALITY IMAGE\n\t\t\t// Load a low quaility image quickly and then blur in the high quaility image before removing the low quality one\n\t\t\tconst lowResDiv = document.getElementById('bg-low');\n\t\t\tconst highResDiv = document.getElementById('bg-high');\n\t\t\tconst highResImageUrl = 'https://cdn.aamira.me/bwca-day.webp';\n\n\t\t\tconst highResImg = new Image();\n\t\t\thighResImg.src = highResImageUrl;\n\n\t\t\thighResImg.onload = () => {\n\t\t\t\thighResDiv.classList.remove('opacity-0');\n\t\t\t\tlowResDiv.classList.add('blur-none');\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t  lowResDiv.classList.add('hidden');\n\t\t\t\t}, 500); \n\t\t\t};\n\n\t\t\thighResImg.onerror = () => {\n\t\t\t\tconsole.error('Failed to load high-resolution image.');\n\t\t\t};\n\t\t\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Header().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<main class=\"flex-grow\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
