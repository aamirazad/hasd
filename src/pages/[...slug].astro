---
import { getCollection } from "astro:content";
import PostLayout from "@/layouts/PostLayout.astro";
import * as cheerio from "cheerio";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const pages = await getCollection("pages");
  return pages.map((page) => ({
    params: { slug: page.data.slug },
    props: { page },
  }));
}

// 2. For your template, you can get the entry directly from the prop
const { page } = Astro.props;

const $ = cheerio.load(page.data.content);

const slugify = (text) => {
  return text
    .toString()
    .toLowerCase()
    .replace(/\s+/g, "-")
    .replace(/[^\w-]+/g, "")
    .replace(/--+/g, "-")
    .replace(/^-+/, "")
    .replace(/-+$/, "");
};

// Add the page title as the first heading
const pageHeading = {
  text: page.data.title,
  id: slugify(page.data.title),
  tagName: "h1",
};

const headings = [
  pageHeading,
  ...$("h1, h2, h3, h4, h5, h6")
    .map((i, el) => {
      const text = $(el).text();
      let id = $(el).attr("id");

      if (!id) {
        id = slugify(text);
        $(el).attr("id", id); // Add the ID to the element in the Cheerio object
      }

      return {
        text: text,
        id: id,
        tagName: el.tagName,
      };
    })
    .get(),
];

// Get the modified HTML content with IDs added. This is the string
// that gets rendered into the HTML sent to the browser.
const processedContent = $.html();
---

<PostLayout
  page={page}
  headings={headings}
  processedContent={processedContent}
/>
