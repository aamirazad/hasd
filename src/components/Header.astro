---
const { pathname } = Astro.url;
const menu = [
  {
    name: "Home",
    url: "/",
  },
  {
    name: "About",
    url: "/about",
  },
  {
    name: "Sim",
    url: "/sim",
  },
];
---

<header
  class="container py-2 z-30 mb-4 lg:mt-4 lg:rounded-lg sticky top-0 glass"
>
  <nav class="relative flex flex-wrap items-center justify-between">
    <!-- Navbar toggler -->
    <input id="nav-toggle" type="checkbox" class="hidden" />
    <label
      for="nav-toggle"
      class="order-0 cursor-pointer flex items-center md:hidden text-gray-700 lg:order-1"
    >
      <svg id="show-button" class="h-6 fill-current block" viewBox="0 0 20 20">
        <title>Menu Open</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
    </label>
    <!-- /Navbar toggler -->
    <!-- Desktop links -->
    <ul
      id="nav-menu"
      class="text-center lg:text-left order-3 hidden w-full pb-6 md:order-1 md:flex md:w-auto md:space-x-2 md:pb-0 lg:space-x-4"
    >
      {
        menu.map((item) => (
          <li>
            <a
              href={item.url}
              class={`block p-2 font-normal text-gray-700 dlg:px-2 lg:py-3 ${
                (pathname === `${item.url}/` || pathname === item.url) &&
                "underline underline-offset-3"
              }`}
              data-text={item.name}
            >
              {item.name}
            </a>
          </li>
        ))
      }
    </ul>

    <!-- Mobile links -->
    <ul
      id="nav-menu-mobile"
      class="glass absolute left-0 top-full z-40 shadow-lg md:hidden text-center space-y-2 transition-all duration-300 overflow-hidden max-h-0 pointer-events-none rounded-b-lg border-t border-gray-200 min-w-[10rem] w-auto mt-3 bg-[#b8e6f0]/95"
    >
      {
        menu.map((item) => (
          <li>
            <a
              href={item.url}
              class={`block px-4 py-2 font-semibold text-gray-700 dlg:px-2 lg:py-3 ${
                (pathname === `${item.url}/` || pathname === item.url) &&
                "underline underline-offset-3"
              }`}
              onclick="document.getElementById('nav-toggle').checked = false;"
            >
              {item.name}
            </a>
          </li>
        ))
      }
    </ul>
    <style>
      nav {
        position: relative;
      }
      #nav-menu-mobile {
        transition:
          max-height 0.3s cubic-bezier(0.4, 0, 0.2, 1),
          opacity 0.2s;
      }
      #nav-toggle:checked ~ #nav-menu-mobile {
        max-height: 500px;
        pointer-events: auto;
      }
      @media (min-width: 768px) {
        #nav-menu-mobile {
          display: none !important;
        }
      }
    </style>
    <!-- <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js"
    ></script> -->
    <script>
      declare var gsap: any;
      document.addEventListener("DOMContentLoaded", () => {
        const navToggle = document.getElementById("nav-toggle");
        const menu = document.getElementById("nav-menu-mobile");
        const items = menu?.querySelectorAll("li");

        navToggle?.addEventListener("change", () => {
          if (
            navToggle instanceof HTMLInputElement &&
            navToggle.checked &&
            typeof gsap !== "undefined" &&
            items
          ) {
            gsap.set(items, { opacity: 0, y: -20 });
            gsap.to(items, {
              opacity: 1,
              y: 0,
              duration: 0.35,
              stagger: 0.12,
              ease: "power2.out",
              overwrite: true,
            });
          } else if (
            navToggle instanceof HTMLInputElement &&
            !navToggle.checked &&
            typeof gsap !== "undefined" &&
            items
          ) {
            gsap.to(items, {
              opacity: 0,
              y: -20,
              duration: 0.18,
              stagger: { each: 0.05, from: "end" },
              overwrite: true,
            });
          }
        });
        // Close menu on link click
        if (menu && navToggle instanceof HTMLInputElement) {
          menu.querySelectorAll("a").forEach((link) => {
            link.addEventListener("click", () => {
              navToggle.checked = false;
            });
          });
        }
      });
    </script>
    <div class="order-1 ml-auto flex items-center md:order-2 lg:ml-0">
      <a
        class="mr-4 inline-block text-xl text-gray-700"
        href="#"
        aria-label="search"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M21 21l-4.35-4.35m0 0a7.5 7.5 0 111.06-1.06l4.35 4.35z"></path>
        </svg>
      </a>
    </div>
  </nav>
</header>
