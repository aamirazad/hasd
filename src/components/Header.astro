---
import Tippy from "@/components/Tippy.astro";

const { pathname } = Astro.url;
const menu = [
  {
    name: "Home",
    url: "/",
  },
  {
    name: "About",
    url: "/about",
  },
  {
    name: "Sim",
    url: "/sim",
  },
];
---

<header
  role="banner"
  class="container py-2 z-30 mb-4 lg:mt-4 lg:rounded-lg sticky top-0 glass"
>
  <nav
    role="navigation"
    class="relative flex flex-wrap items-center justify-between"
  >
    <!-- Navbar toggler -->
    <input id="nav-toggle" type="checkbox" class="hidden" />
    <label
      for="nav-toggle"
      class="order-0 cursor-pointer flex items-center md:hidden lg:order-1"
    >
      <svg id="show-button" class="h-6 fill-current block" viewBox="0 0 20 20">
        <title>Menu Open</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
    </label>
    <!-- /Navbar toggler -->
    <!-- Desktop links -->
    <ul
      id="nav-menu"
      class="text-center lg:text-left order-3 hidden w-full pb-6 md:order-1 md:flex md:w-auto md:space-x-2 md:pb-0 lg:space-x-4"
    >
      {
        menu.map((item) => (
          <li>
            <a
              href={item.url}
              class={`block p-2 font-normal  dlg:px-2 lg:py-3 ${
                (item.url === "/"
                  ? pathname == "/"
                  : pathname.startsWith(item.url)) &&
                "underline underline-offset-3"
              }`}
              data-text={item.name}
            >
              {item.name}
            </a>
          </li>
        ))
      }
    </ul>

    <!-- Analytics badge -->
    <div
      transition:persist
      id="analytics-badge"
      class="order-2 flex items-center justify-center space-x-2 relative group"
      style="display: none;"
    >
      <Tippy content="Weekly pageviews">
        <div
          aria-label="Weekly pageviews"
          data-microtip-position="bottom"
          role="tooltip"
          class="flex items-center space-x-1 transition-transform duration-300 group-hover:-translate-x-4"
        >
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
            <path
              fill-rule="evenodd"
              d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z"
              clip-rule="evenodd"></path>
          </svg>
          <span id="visitor-count" class="text-sm font-medium">0</span>
        </div>
      </Tippy>
      <a
        href="https://analytics.aamira.me/3"
        target="_blank"
        rel="noopener noreferrer"
        class="hidden md:block absolute right-0 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-x-full group-hover:translate-x-0 p-1"
        aria-label="Open analytics dashboard"
      >
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
          <path
            d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z"
          ></path>
          <path
            d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z"
          ></path>
        </svg>
      </a>
    </div>

    <!-- Mobile links -->
    <ul
      id="nav-menu-mobile"
      class="bg-[#d3efed]/80 absolute left-0 top-full shadow-lg md:hidden text-center space-y-2 transition-all duration-300 overflow-hidden max-h-0 pointer-events-none rounded-b-lg min-w-[10rem]"
    >
      {
        menu.map((item) => (
          <li>
            <a
              href={item.url}
              class={`block px-4 py-2 font-semibold  dlg:px-2 lg:py-3 ${
                (item.url === "/"
                  ? pathname == "/"
                  : pathname.startsWith(item.url)) &&
                "underline underline-offset-3 decoration-lake"
              }`}
              onclick="document.getElementById('nav-toggle').checked = false;"
            >
              {item.name}
            </a>
          </li>
        ))
      }
    </ul>
    <style>
      nav {
        position: relative;
      }
      #nav-menu-mobile {
        transition:
          max-height 0.3s cubic-bezier(0.4, 0, 0.2, 1),
          opacity 0.2s;
      }
      #nav-toggle:checked ~ #nav-menu-mobile {
        max-height: 500px;
        pointer-events: auto;
        opacity: 1;
      }
      @media (min-width: 768px) {
        #nav-menu-mobile {
          display: none !important;
        }
      }
    </style>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const navToggle = document.getElementById("nav-toggle");
        const menu = document.getElementById("nav-menu-mobile");

        // Close menu on link click
        if (menu && navToggle instanceof HTMLInputElement) {
          menu.querySelectorAll("a").forEach((link) => {
            link.addEventListener("click", () => {
              navToggle.checked = false;
            });
          });

          // Close menu when clicking outside
          document.addEventListener("click", (event) => {
            const header = document.querySelector("header");
            const target = event.target as Node;
            if (header && !header.contains(target) && navToggle.checked) {
              navToggle.checked = false;
            }
          });
        }

        // Fetch analytics data
        const fetchAnalytics = async () => {
          try {
            const today = new Date();
            const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);

            const startDate = weekAgo.toISOString().split("T")[0];
            const endDate = today.toISOString().split("T")[0];

            const response = await fetch(
              `https://analytics.aamira.me/api/overview/3?startDate=${startDate}&endDate=${endDate}&timeZone=America%2FNew_York&filters=[]`,
            );
            const data = await response.json();
            const pageviews = data.data.pageviews || 0;

            // Update the badge
            const badge = document.getElementById("analytics-badge");
            const countElement = document.getElementById("visitor-count");
            if (badge && countElement) {
              countElement.textContent = pageviews.toString();
              badge.style.display = "flex";
            }
          } catch (error) {
            console.error("Failed to fetch analytics:", error);
            // Keep badge hidden on error
          }
        };

        // Fetch analytics on page load
        fetchAnalytics();
      });
    </script>
  </nav>
</header>
